# This is a basic workflow to help you get started with Actions

name: CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # TODO build and lint job

  # Deploys application using the Vercel CLI
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout
      - uses: actions/checkout@v2

      # Setup node
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - run: npm install

      - name: Pull Staging Secrets
        env:
          BW_PASSWORD: ${{ secrets.BW_PASSWORD }}
        run: (echo $BW_PASSWORD && cat) | npm run secrets-staging

      # Deploy using Vercel CLI
      - name: Vercel Deployment
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          echo "\
            ::set-output name=DEPLOY_LINK::$( \
              (npx vercel --confirm --token $VERCEL_TOKEN >> out.log); \
              cat out.log | egrep -o 'https:\/\/bgc-safety-f2021-.+-bitsofgood.vercel.app' \
            )\
          "
          echo "::set-output name=DEPLOY_TIMESTAMP::$(date +'%Y-%m-%dT%H:%M:%S')"
        id: deploy

      - name: Pull Request Updater GitHub Action
        if: github.event_name == 'pull_request'
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          base-branch-regex: main
          body-update-action: suffix
          body-template: ${{ format('[Deplyoment ({0})]({1})', steps.deploy.outputs.DEPLOY_TIMESTAMP, steps.deploy.outputs.DEPLOY_LINK) }}
        uses: tzkhan/pr-update-action@v2
